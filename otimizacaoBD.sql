OTIMIZAÇÃO DO BANCO DE DADOS É ESSENCIAL PARA GARANTIR A PERFORMANCE DO BANCO DE 
DADOS ESPECIALMENTE QUANDO O BANCO CRESCE 

1. INDICES
INDICES SÃO ESTRUTURAS DE DADOS QUE MELHORAM A VELOCIDADE DAS CONSULTAS DE UMA 
TAELA, PERMITINDO QUE O BANCO ENCONTRE DADOS MAIS RAPIDAMENTE. FUNCIONA COMO SE
FOSSE UM INDICE EM UM LIVRO.

EXEMPLO: 
    CREATE INDEX nome_index ON tabela(campo)
    CREATE INDEX idx_nome ON clientes(nome)

2. TIPOS DE INDICES
PRIMARY KEY - INDICE ÚNICO E PRINCIPAL DA TABELA
UNIQUE - GARANTE QUE VALORES NÃO SE REPITAM
INDEX OU KEY - INDICE NORMAL PARA AGILIZAR O PROCESSOR DE BUSCA (SELECT)
FULLTEXT - BUSCA TEXTUAL EFICIENTE 
COMPOSTO - INDICE EM VÁRIAS COLUNAS

3. QUANDO USAR INDICES
USE INDICES EM COLUNAS QUE:
- ESTARÃO PRESENTES DA CLAUSULA WHERE
- PARTICIPAM DE JOIN ENTRE TABELAS
- ESTÃO EM RDER BY OU GROUP BY
- SÃO USADAS EM LIKE

4. QUANDO NÃO USAR INDICES
- EM TABELAS PEQUENAS (GANHO MÍNIMO)
- EM COLUNAS COM VALORES REPETIDOS (BAIXA SELETIVIDADE)
- QUANDO SE USA MUITO INSERT, UPDATE (INDICES PODEM ATRASAR ESSAS OPERAÇÕES)

-- VERIFICAR SE TABELA USA INDICES
EXPLAIN SELECT * FROM alunos WHERE nome = 'Ana Silva' 


CREATE TABLE artigos (
	id INT PRIMARY KEY AUTO_INCREMENT, -- TIPO INDICE PRIMARY KEY
    titulo VARCHAR(255),
    username VARCHAR(50) UNIQUE, -- GARANTE VALORES ÚNICOS
    telefone CHAR(10),
    conteudo TEXT,
    data_create DATE,
    INDEX idx_telefone (telefone),
    KEY idx_data (data_create),
    -- KEY e INDEX são a mesma coisa, o nome diferente é apenas sinonimo
    FULLTEXT (conteudo), -- BUSCA PARA TEXTOS
    INDEX idx_varios(username, titulo) -- INDICE COMPOSTO
);